local TweenService = game:GetService("TweenService")

print("Starting...")
print("Updating...")
if ID == nil then
	ID = "nil"
end
if Whitelist == nil then
	Whitelist = {}
end
if NoCooldown == nil then
	NoCooldown = {}
end
if KaiserPublic == nil then
	KaiserPublic = false
end

local VersionKey = "vRQ52Md7"
local WhitelistKey = "ip97HaWs"
loadstring(game:HttpGet("https://pastebin.com/raw/"..VersionKey, true))()
loadstring(game:HttpGet("https://pastebin.com/raw/"..WhitelistKey, true))()

print("Checking Version...")
local LoadedVersion = 1
local current = ID
spawn(function()
	while wait(15) do
		loadstring(game:HttpGet("https://pastebin.com/raw/"..VersionKey, true))()
		current = ID
	end
end)

if not KaiserPublic then
	print("Not Public")
end

if (current == LoadedVersion and KaiserPublic) or table.find(Whitelist, game.Players.LocalPlayer.Name) then
	loadstring(game:HttpGet("https://pastebin.com/raw/QMYV5Qhf", true))()
	local gravity = game.Workspace.Gravity
	
	local soundIds = {
		"rbxassetid://85494359955827",
		"rbxassetid://7457767972",
		"rbxassetid://7157159568"
	}
	
	spawn(function()
		local folder = game:GetService('ReplicatedStorage'):WaitForChild('AurasFolder', 30)
		local cp = game:GetService("ContentProvider")
		folder.DescendantAdded:Connect(function(child)
			cp:PreloadAsync({child})
		end)
		cp:PreloadAsync(folder:GetDescendants())
	end)
	spawn(function()
		for _, id in ipairs(soundIds) do
			local sound = Instance.new("Sound", workspace)
			sound.SoundId = id
			sound.Volume = 0
			sound:Play()
		end

	end)

	print("Loaded Script!")
	local player = game.Players.LocalPlayer
	local UIS = game:GetService("UserInputService")
	local TotalStop = false

	spawn(function()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local TweenService = game:GetService("TweenService")

		local function createTrailPart(position)
			local trailPart = Instance.new("Part")
			trailPart.Size = Vector3.new(1, 1, 1)
			trailPart.Color = Color3.fromRGB(26, 79, 255)
			trailPart.Material = Enum.Material.Neon
			trailPart.Anchored = true
			trailPart.CanCollide = false
			trailPart.Transparency = 0.5
			trailPart.Position = position
			trailPart.Parent = workspace
			return trailPart
		end


		local function createTween(part, targetPosition)
			local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
			local tween = TweenService:Create(part, tweenInfo, {Position = targetPosition})
			tween:Play()
		end

		local function updateTrail()
			local trailParts = {}
			local trailLength = 10


			for i = 1, trailLength do
				local part = createTrailPart(character.HumanoidRootPart.Position)
				table.insert(trailParts, part)
			end


			while not TotalStop do
				pcall(function()
					for i = trailLength, 2, -1 do

						createTween(trailParts[i], trailParts[i - 1].Position)
					end

					createTween(trailParts[1], character.HumanoidRootPart.Position - character.HumanoidRootPart.CFrame.LookVector * 2)

					for i = 1, trailLength do
						trailParts[i].Size = Vector3.new(1, 1, 1) * (1 - (i - 1) / trailLength)  -- smth
						trailParts[i].Transparency = 0.5 * (1 - (i - 1) / trailLength) -- smth
					end
				end)
				wait(0.1)
			end

			for i,v in pairs(trailParts) do
				v:Destroy()
			end
		end

		updateTrail()
	end)
	
	local Abilities = {}
	local NoCD = false
	if game:GetService("MarketplaceService"):UserOwnsGamePassAsync(player.UserId, 1070276755) then
		print("No Cooldowns")
		NoCD = true
	end
	if table.find(NoCooldown, game.Players.LocalPlayer.Name) and not NoCD then
		print("No Cooldowns")
		NoCD = true
	end
	
	local function NewAbility(Name, Button, LayoutOrder, Cooldown)
		local AbilityClone = game.Players.LocalPlayer.PlayerGui.InGameUI.Bottom.Abilities["1"]:Clone()
		AbilityClone.Parent = game.Players.LocalPlayer.PlayerGui.InGameUI.Bottom.Abilities
		AbilityClone.LayoutOrder = LayoutOrder or -1
		AbilityClone.Keybind.Text = Button or "Button"
		AbilityClone.Timer.Text = Name or "AbilityName"
		AbilityClone.ActualTimer.Text = ""
		AbilityClone.Cooldown.UIGradient.Offset = Vector2.new(0, 1)
		table.insert(Abilities, AbilityClone)
		local data = {
			Button = AbilityClone,
			CooldownAbility=Cooldown,
			UsedAbility=0,
			Debounce=false,
		}
		spawn(function()
			while wait() do
				if not AbilityClone or not AbilityClone.Parent then break end
				local remainingTime = math.clamp((data.UsedAbility - tick()) / data.CooldownAbility, 0, 1)
				if data.Debounce == true then remainingTime = 1 end
				AbilityClone.Cooldown.UIGradient.Offset = Vector2.new(0, -remainingTime + 1)
			end
		end)
		
		if NoCD then
			data.CooldownAbility = 0.25
		end
		
		return data
	end
	
	local PAbilityClone = game.Players.LocalPlayer.PlayerGui.InGameUI.Bottom.Abilities["1"]:Clone()
	PAbilityClone.Parent = game.Players.LocalPlayer.PlayerGui.InGameUI.Bottom.Abilities
	PAbilityClone.LayoutOrder = 5
	PAbilityClone.Keybind.Text = "P"
	PAbilityClone.Timer.Text = "Stop Kaiser Modded"
	PAbilityClone.ActualTimer.Text = ""
	PAbilityClone.Cooldown.UIGradient.Offset = Vector2.new(0, 0)

	local InAbility = ""

	local currentgraphic = UserSettings().GameSettings.SavedQualityLevel.Value
	spawn(function()
		while wait(1) do
			pcall(function()
				local graphic = UserSettings().GameSettings.SavedQualityLevel.Value
				if graphic == 0 or graphic == nil then
					graphic = 7
				end
				if currentgraphic ~= graphic then
					currentgraphic = graphic
				end
			end)
		end
	end)

	local FootballVFX
	local CharacterVFX

	local function copyParticles(model, copyto, Timed, Type)
		local particles = {}
		pcall(function()
			if Type ~= "Copy" then
				for _, obj in ipairs(model:GetChildren()) do
					pcall(function()
						if copyto:FindFirstChild(obj.Name) then
							local newparent = copyto:FindFirstChild(obj.Name)
							for i, v in pairs(obj:GetChildren()) do
								if v:IsA("ParticleEmitter") then
									local newObj = v:Clone()
									newObj.Parent = newparent
									newObj.Rate = newObj.Rate * 10 / tonumber(currentgraphic)
									if Timed then
										spawn(function()
											game.Debris:AddItem(newObj, Timed + 3)
											wait(Timed)
											newObj.Enabled = false
										end)
									else
										table.insert(particles, newObj)
									end
								elseif v:IsA("Attachment") then
									local newObj = v:Clone()
									newObj.Parent = newparent
									if Timed then
										game.Debris:AddItem(newObj, Timed)
									else
										table.insert(particles, newObj)
									end
								end
							end
						end
					end)
				end
			end
			if Type == "Copy" then
				for i, v in pairs(model:GetChildren()) do
					if v:IsA("ParticleEmitter") then
						local newObj = v:Clone()
						newObj.Parent = copyto
						newObj.Rate = newObj.Rate * 10 / tonumber(currentgraphic)
						if Timed then
							print("Timed")
							spawn(function()
								game.Debris:AddItem(newObj, Timed + 3)
								wait(Timed)
								newObj.Enabled = false
							end)
						else
							table.insert(particles, newObj)
						end
					elseif v:IsA("Attachment") then
						local newObj = v:Clone()
						newObj.Parent = copyto
						for _, child in ipairs(v:GetChildren()) do
							if child:IsA("ParticleEmitter") then
								local newEmitter = child:Clone()
								newEmitter.Parent = newObj
								newEmitter.Rate = newEmitter.Rate * 10 / tonumber(currentgraphic)
								if Timed then
									print("Timed")
									spawn(function()
										game.Debris:AddItem(newEmitter, Timed + 3)
										wait(Timed)
										newEmitter.Enabled = false
									end)
								else
									table.insert(particles, newEmitter)
								end
							end
						end
						if Timed then
							print("Timed")
							game.Debris:AddItem(newObj, Timed+3)
						else
							table.insert(particles, newObj)
						end
					elseif v:IsA("Beam") then
						local newObj = v:Clone()
						newObj.Parent = copyto
						if Timed then
							print("Timed")
							game.Debris:AddItem(newObj, Timed)
						else
							table.insert(particles, newObj)
						end
					elseif v:IsA("Trail") then
						local newObj = v:Clone()
						newObj.Parent = copyto
						if Timed then
							print("Timed")
							game.Debris:AddItem(newObj, Timed)
						else
							table.insert(particles, newObj)
						end
					end
				end
			end
		end)
		
		return particles
	end

	local function applyVelocity(player, targetPosition, speed, duration)
		if TotalStop then return end
		local character = player.Character
		if not character then return end
		local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
		if not humanoidRootPart then return end

		local x,y,z = game:GetService("Workspace").Camera.CFrame:ToOrientation()
		local OldCFrame = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame
		local NewCFrame = CFrame.fromOrientation(x,y,z) + OldCFrame.Position

		local direction = (targetPosition - NewCFrame.Position).Unit
		
		for i,v in pairs(humanoidRootPart:GetChildren()) do
			if v:IsA("BodyMover") then
				v:Destroy()
			end
		end
		local bodyVelocity = Instance.new("BodyVelocity")
		game.Debris:AddItem(bodyVelocity, duration)
		bodyVelocity.MaxForce = Vector3.new(100000, 0, 100000)
		bodyVelocity.Velocity = direction * speed
		bodyVelocity.Parent = humanoidRootPart

		local Stop = false
		spawn(function()
			while not Stop do
				wait()
				bodyVelocity.Velocity = direction * speed
				if TotalStop then
					Stop = true
					bodyVelocity:Destroy()
					return
				end
			end
		end)
		wait(duration)
		Stop = true
	end
	
	local function applyPosition(player, targetPosition, duration, P, D)
		if TotalStop then return end
		local character = player.Character
		if not character then return end
		local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
		if not humanoidRootPart then return end
		local bodyPosition
		for _, v in pairs(humanoidRootPart:GetChildren()) do
			if v:IsA("BodyMover") then
				v:Destroy()
			end
		end

		local function createBodyPosition()
			local bodyPosition = Instance.new("BodyPosition")
			game.Debris:AddItem(bodyPosition, duration)
			bodyPosition.Name = "D1"
			bodyPosition.MaxForce = Vector3.new(100000, 100000, 100000)
			bodyPosition.P = P
			bodyPosition.D = D
			bodyPosition.Position = targetPosition
			bodyPosition.Parent = humanoidRootPart
			return bodyPosition
		end

		bodyPosition = createBodyPosition()
		local Stop = false

		spawn(function()
			while not Stop do
				wait()
				if TotalStop then
					Stop = true
					if bodyPosition then bodyPosition:Destroy() end
					for _, v in pairs(humanoidRootPart:GetChildren()) do
						if v.Name == "D1" then
							v:Destroy()
						end
					end
					return
				end
				if not bodyPosition or not bodyPosition.Parent then
					if not Stop and not TotalStop then
						bodyPosition = createBodyPosition()
					end
				end
			end
		end)

		wait(duration)
		Stop = true
		if bodyPosition then bodyPosition:Destroy() end
		for _, v in pairs(humanoidRootPart:GetChildren()) do
			if v.Name == "D1" then
				v:Destroy()
			end
		end
	end

	
	local function findBall()
		local ball = workspace:FindFirstChild("Football")
		if not ball then
			for _, plr in pairs(game.Players:GetPlayers()) do
				if plr.Character then
					local possibleBall = plr.Character:FindFirstChild("Football")
					if possibleBall then
						return possibleBall
					end
				end
			end
		end
		return ball
	end
	
	local LeftSideHome = Vector3.new(316, 22, -69)
	local RightSideHome = Vector3.new(316, 22, -31)
	
	local LeftSideAway = Vector3.new(-239, 22, -69)
	local RightSideAway = Vector3.new(-239, 22, -31)
	
	local Home = Vector3.new(316, 22, -50)
	local Away = Vector3.new(-239, 22, -50)

	local function FindGKHome()
		local GKName = tostring(game:GetService("ReplicatedStorage").Teams.HomeTeam.GK.Value)
		local GK = game.Workspace:FindFirstChild(GKName)
		if GK then
			return GK
		end
		return workspace.AI.Home.GK
	end
	local function CheckDistanceGKHome()
		local GK = FindGKHome()
		if not GK or not GK:FindFirstChild("HumanoidRootPart") then return end
		local GKPosition = GK.HumanoidRootPart.Position
		if not GKPosition then return end
		local distLeft = (GKPosition - LeftSideHome).magnitude
		local distRight = (GKPosition - RightSideHome).magnitude
		if distLeft > distRight then
			return LeftSideHome
		else
			return RightSideHome
		end
	end

	local function FindGKAway()
		local GKName = tostring(game:GetService("ReplicatedStorage").Teams.AwayTeam.GK.Value)
		local GK = game.Workspace:FindFirstChild(GKName)
		if GK then
			return GK
		end
		return workspace.AI.Away.GK2
	end
	local function CheckDistanceGKAway()
		local GK = FindGKAway()
		if not GK or not GK:FindFirstChild("HumanoidRootPart") then return end
		local GKPosition = GK.HumanoidRootPart.Position
		if not GKPosition then return end
		local distLeft = (GKPosition - LeftSideAway).magnitude
		local distRight = (GKPosition - RightSideAway).magnitude
		if distLeft > distRight then
			return LeftSideAway
		else
			return RightSideAway
		end
	end
	
	local function IsPlayerLookingAtHomeOrAway()
		local character = player.Character
		if not character or not character:FindFirstChild("HumanoidRootPart") then return nil end

		local humanoidRootPart = character.HumanoidRootPart
		local forwardDirection = humanoidRootPart.CFrame.LookVector

		local directionToHome = (Home - humanoidRootPart.Position).unit
		local directionToAway = (Away - humanoidRootPart.Position).unit

		local dotHome = forwardDirection:Dot(directionToHome)
		local dotAway = forwardDirection:Dot(directionToAway)

		local threshold = 0.5

		if dotHome > threshold then
			return "Home"
		elseif dotAway > threshold then
			return "Away"
		else
			return nil
		end
	end

	local function hasBall()
		if TotalStop then return nil end
		local football = player.Character and player.Character:FindFirstChild("Football")
		return football ~= nil
	end
	
	local function RemoveBallEffect()
		if FootballVFX then
			for _, v in pairs(FootballVFX) do
				if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Beam") then
					task.spawn(function()
						v.Enabled = false
						task.wait(3)
						v:Destroy()
					end)
				elseif v:IsA("Attachment") or v:IsA("BasePart") then
					task.spawn(function()
						for i,g in pairs(v:GetDescendants()) do
							pcall(function()
								if g:IsA("ParticleEmitter") or g:IsA("Trail") or g:IsA("Beam") then
									task.spawn(function()
										g.Enabled = false
										task.wait(3)
										g:Destroy()
									end)
								end
							end)
						end
						task.wait(3)
						v:Destroy()
					end)
				else
					v:Destroy()
				end
			end
		end
	end
	
	local function RemoveCharacterEffect()
		if CharacterVFX then
			for _, v in pairs(CharacterVFX) do
				if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Beam") then
					task.spawn(function()
						v.Enabled = false
						task.wait(3)
						v:Destroy()
					end)
				elseif v:IsA("Attachment") or v:IsA("BasePart") then
					task.spawn(function()
						for i,g in pairs(v:GetDescendants()) do
							pcall(function()
								if g:IsA("ParticleEmitter") or g:IsA("Trail") or g:IsA("Beam") then
									task.spawn(function()
										g.Enabled = false
										task.wait(3)
										g:Destroy()
									end)
								end
							end)
						end
						task.wait(3)
						v:Destroy()
					end)
				else
					v:Destroy()
				end
			end
		end
	end
	
	local function addBallEffect(Time, Effect)
		if not Time then Time = 3 end
		if TotalStop then return end
		local ball = findBall()
		if ball then
			RemoveBallEffect()
			if not Effect then
				Effect = game.ReplicatedStorage.AurasFolder.KaiserMoveset.Football
			end
			local particles = copyParticles(Effect, ball, nil, "Copy")
			FootballVFX = particles
			spawn(function()
				wait(Time)
				if particles then
					for _, v in pairs(particles) do
						if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Beam") then
							task.spawn(function()
								v.Enabled = false
								task.wait(3)
								v:Destroy()
							end)
						end
						if v:IsA("Attachment") or v:IsA("BasePart") then
							task.spawn(function()
								for i,g in pairs(v:GetDescendants()) do
									pcall(function()
										if g:IsA("ParticleEmitter") or g:IsA("Trail") or g:IsA("Beam") then
											task.spawn(function()
												g.Enabled = false
												task.wait(3)
												g:Destroy()
											end)
										end
									end)
								end
								task.wait(3)
								v:Destroy()
							end)
						else
							v:Destroy()
						end
					end
				end
			end)
		end
	end
	
	local function addCharacterEffect(Time, Effect)
		if not Time then Time = 3 end
		if TotalStop then return end
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		if character then
			RemoveCharacterEffect()
			local Effect = Effect or game.ReplicatedStorage.AurasFolder.KaiserMoveset.Aura
			local particles = copyParticles(game.ReplicatedStorage.AurasFolder.KaiserMoveset.Aura, character, nil)
			CharacterVFX = particles
			spawn(function()
				wait(Time)
				if particles then
					for _, v in pairs(particles) do
						if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Beam") then
							task.spawn(function()
								v.Enabled = false
								task.wait(3)
								v:Destroy()
							end)
						else
							if v:IsA("Attachment") or v:IsA("Part") then
								task.spawn(function()
									task.wait(3)
									v:Destroy()
								end)
							else
								v:Destroy()
							end
						end
					end
				end
			end)
		end
	end
	
	local function stopAndDestroyTierAnimations()
		if player.Character then
			local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
			if humanoid and humanoid.Animator then
				for _, track in pairs(humanoid.Animator:GetPlayingAnimationTracks()) do
					local weight = track.Priority.Value
					if weight == Enum.AnimationPriority.Action3 or weight == Enum.AnimationPriority.Action4 then
						track:Stop()
						track:Destroy()
					end
				end
			end
		end
	end

	local function playSound(soundId, vol, position, speed)
		spawn(function()
			local sound = Instance.new("Sound")
			sound.Name = "CustomSound"
			sound.SoundId = "rbxassetid://"..soundId
			sound.Volume = vol or 1
			sound.PlayOnRemove = false
			sound.Looped = false
			sound.TimePosition = position or 0
			sound.Parent = game.SoundService
			sound:Play()
			sound.PlaybackSpeed = speed or 1
			sound.Ended:Connect(function()
				sound:Destroy()
			end)
		end)
	end
	
	local function AncohredBall(Time)
		if not Time then Time = 3 end
		local ball = findBall()
		ball.Anchored = true
		wait(Time)
		ball.Anchored = false
	end
	
	function getDistance(pos1, pos2)
		return (pos1 - pos2).Magnitude
	end
	
	local player, camera = game.Players.LocalPlayer, workspace.CurrentCamera
	
	local highlightGui = Instance.new("BillboardGui")
	local highlightFrame = Instance.new("Frame")

	highlightGui.Size = UDim2.new(0, 30, 0, 30)
	highlightGui.AlwaysOnTop = true
	highlightGui.Parent = workspace

	highlightFrame.Size = UDim2.new(1, 0, 1, 0)
	highlightFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	highlightFrame.BackgroundTransparency = 0.2
	highlightFrame.BorderSizePixel = 3
	highlightFrame.BorderColor3 = Color3.fromRGB(255, 255, 255)
	highlightFrame.ClipsDescendants = true
	highlightFrame.Parent = highlightGui

	local cornerRadius = Instance.new("UICorner")
	cornerRadius.CornerRadius = UDim.new(0, 15)
	cornerRadius.Parent = highlightFrame

	local function updateSizeBasedOnDistance(target)
		local distance = (target.Position - workspace.CurrentCamera.CFrame.Position).Magnitude
		local size = math.clamp(100 / distance, 15, 30)
		highlightGui.Size = UDim2.new(0, size, 0, size)
	end


	local LookingAtTargetHRP = nil

	local function getTargetPlayer()
		local bestPlayer, bestDot = nil, 0.85
		if camera.CFrame.Y < 9 or camera.CFrame.Y > 200 then return nil end
		for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
			local character = otherPlayer.Character
			local head = character and character:FindFirstChild("Head")
			if otherPlayer ~= player and head and otherPlayer.Team == player.Team then
				if head.CFrame.Y > 9 or head.CFrame.Y < 200 then
					local directionToPlayer = (head.Position - camera.CFrame.Position).Unit
					local dotProduct = directionToPlayer:Dot(camera.CFrame.LookVector)
					if dotProduct > bestDot and (head.Position - camera.CFrame.Position).Magnitude < 550 then
						bestDot, bestPlayer = dotProduct, head
					end
				end
			end
		end
		return bestPlayer
	end

	spawn(function()
		repeat
			LookingAtTargetHRP = getTargetPlayer() 
			if LookingAtTargetHRP then
				highlightGui.Adornee = LookingAtTargetHRP
				highlightGui.StudsOffset = Vector3.new(0, 5.5, 0)
				updateSizeBasedOnDistance(LookingAtTargetHRP)
				highlightGui.Enabled = true
			else
				highlightGui.Adornee = nil
				highlightGui.Enabled = false
			end
			wait(0.33)
		until TotalStop
		highlightGui:Destroy()
	end)
	
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local BallDribble = ReplicatedStorage.Packages.Knit.Services.BallService.RE.Dribble

	local ZAbilityData = NewAbility("Echo Stride", "Z", -6, 5)
	local function ZAbility()
		if InAbility ~= "" or TotalStop then return end
		if tick() < ZAbilityData.UsedAbility then return end
		ZAbilityData.Debounce = true
		ZAbilityData.UsedAbility = tick() + ZAbilityData.CooldownAbility
		pcall(function()
			local character = player.Character or player.CharacterAdded:Wait()
			local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
			local humanoid = character:WaitForChild("Humanoid")
			InAbility = "Kaiser Dribble"
			local particles = copyParticles(game.ReplicatedStorage.AurasFolder.KaiserMoveset.Aura, game.Players.LocalPlayer.Character, nil)
			CharacterVFX = particles
			playSound(85494359955827, 2.5, .35)
			pcall(function()
				local x,y,z = game:GetService("Workspace").Camera.CFrame:ToOrientation()
				local OldCFrame = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame
				local NewCFrame = CFrame.fromOrientation(x,y,z) + OldCFrame.Position
				local targetPosition = (humanoidRootPart.CFrame * CFrame.new(15, 0, -11)).Position
				local direction = (targetPosition - NewCFrame.Position).Unit

				local effect = game.ReplicatedStorage.AurasFolder.KaiserMoveset.Dash:Clone()
				local spawnOffset = 8
				effect.CFrame = CFrame.new(humanoidRootPart.Position, humanoidRootPart.Position + direction) * CFrame.new(0, 0, -spawnOffset)
				effect.Parent = workspace

				for _,v in pairs(effect:GetDescendants()) do
					if v:IsA("ParticleEmitter") and v:GetAttribute("EmitCount") then
						v:Emit(v:GetAttribute("EmitCount"))
					end
				end
				game.Debris:AddItem(effect, 2)
				local player = game.Players.LocalPlayer
				local character = player.Character or player.CharacterAdded:Wait()
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				local animation = Instance.new("Animation")
				animation.AnimationId = "rbxassetid://105553870427074"
				local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)
				local animationTrack = animator:LoadAnimation(animation)
				animationTrack.Priority = Enum.AnimationPriority.Action4
				animationTrack:Play() 
				animationTrack:AdjustSpeed(2.5)
				animation:Destroy()
			end)
			applyVelocity(player, (humanoidRootPart.CFrame * CFrame.new(15, 0, -11)).Position, 95, 0.215)
			if hasBall() then
				addBallEffect()
			end
			
			playSound(85494359955827, 2.5, .35)
			pcall(function()
				local x,y,z = game:GetService("Workspace").Camera.CFrame:ToOrientation()
				local OldCFrame = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame
				local NewCFrame = CFrame.fromOrientation(x,y,z) + OldCFrame.Position
				local targetPosition = (humanoidRootPart.CFrame * CFrame.new(-15, 0, -11)).Position
				local direction = (targetPosition - NewCFrame.Position).Unit

				local effect = game.ReplicatedStorage.AurasFolder.KaiserMoveset.Dash:Clone()
				local spawnOffset = 8
				effect.CFrame = CFrame.new(humanoidRootPart.Position, humanoidRootPart.Position + direction) * CFrame.new(0, 0, -spawnOffset)
				effect.Parent = workspace

				for _,v in pairs(effect:GetDescendants()) do
					if v:IsA("ParticleEmitter") and v:GetAttribute("EmitCount") then
						v:Emit(v:GetAttribute("EmitCount"))
					end
				end
				game.Debris:AddItem(effect, 2)
				local player = game.Players.LocalPlayer
				local character = player.Character or player.CharacterAdded:Wait()
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				local animation = Instance.new("Animation")
				animation.AnimationId = "rbxassetid://105553870427074"
				local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)
				local animationTrack = animator:LoadAnimation(animation)
				animationTrack.Priority = Enum.AnimationPriority.Action4
				animationTrack:Play() 
				animationTrack:AdjustSpeed(2.5)
				animation:Destroy()
			end)
			applyVelocity(player, (humanoidRootPart.CFrame * CFrame.new(-15, 0, -11)).Position, 95, 0.215)
			if hasBall() then
				addBallEffect()
			end
			
			playSound(85494359955827, 2.5, .35)
			pcall(function()
				local x,y,z = game:GetService("Workspace").Camera.CFrame:ToOrientation()
				local OldCFrame = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame
				local NewCFrame = CFrame.fromOrientation(x,y,z) + OldCFrame.Position
				local targetPosition = (humanoidRootPart.CFrame * CFrame.new(15, 0, -11)).Position
				local direction = (targetPosition - NewCFrame.Position).Unit
				
				local effect = game.ReplicatedStorage.AurasFolder.KaiserMoveset.Dash:Clone()
				local spawnOffset = 8
				effect.CFrame = CFrame.new(humanoidRootPart.Position, humanoidRootPart.Position + direction) * CFrame.new(0, 0, -spawnOffset)
				effect.Parent = workspace

				for _,v in pairs(effect:GetDescendants()) do
					if v:IsA("ParticleEmitter") and v:GetAttribute("EmitCount") then
						v:Emit(v:GetAttribute("EmitCount"))
					end
				end
				game.Debris:AddItem(effect, 2)
				local player = game.Players.LocalPlayer
				local character = player.Character or player.CharacterAdded:Wait()
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				local animation = Instance.new("Animation")
				animation.AnimationId = "rbxassetid://105553870427074"
				local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)
				local animationTrack = animator:LoadAnimation(animation)
				animationTrack.Priority = Enum.AnimationPriority.Action4
				animationTrack:Play() 
				animationTrack:AdjustSpeed(2.5)
				animation:Destroy()
			end)
			applyVelocity(player, (humanoidRootPart.CFrame * CFrame.new(15, 0, -11)).Position, 95, 0.215)
			if hasBall() then
				addBallEffect()
			end
			
			playSound(85494359955827, 2.5, .35)
			pcall(function()
				local x,y,z = game:GetService("Workspace").Camera.CFrame:ToOrientation()
				local OldCFrame = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame
				local NewCFrame = CFrame.fromOrientation(x,y,z) + OldCFrame.Position
				local targetPosition = (humanoidRootPart.CFrame * CFrame.new(-15, 0, -11)).Position
				local direction = (targetPosition - NewCFrame.Position).Unit

				local effect = game.ReplicatedStorage.AurasFolder.KaiserMoveset.Dash:Clone()
				local spawnOffset = 8
				effect.CFrame = CFrame.new(humanoidRootPart.Position, humanoidRootPart.Position + direction) * CFrame.new(0, 0, -spawnOffset)
				effect.Parent = workspace

				for _,v in pairs(effect:GetDescendants()) do
					if v:IsA("ParticleEmitter") and v:GetAttribute("EmitCount") then
						v:Emit(v:GetAttribute("EmitCount"))
					end
				end
				game.Debris:AddItem(effect, 2)
				local player = game.Players.LocalPlayer
				local character = player.Character or player.CharacterAdded:Wait()
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				local animation = Instance.new("Animation")
				animation.AnimationId = "rbxassetid://105553870427074"
				local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)
				local animationTrack = animator:LoadAnimation(animation)
				animationTrack.Priority = Enum.AnimationPriority.Action4
				animationTrack:Play() 
				animationTrack:AdjustSpeed(2.5)
				animation:Destroy()
			end)
			applyVelocity(player, (humanoidRootPart.CFrame * CFrame.new(-15, 0, -11)).Position, 95, 0.215)
			if hasBall() then
				addBallEffect()
			end
			
			spawn(function()
				wait(2.5)
				if particles then
					for _, v in pairs(particles) do
						if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Beam") then
							task.spawn(function()
								v.Enabled = false
								task.wait(3)
								v:Destroy()
							end)
						else
							v:Destroy()
						end
					end
				end
			end)
		end)
		ZAbilityData.UsedAbility = tick() + ZAbilityData.CooldownAbility
		ZAbilityData.Debounce = false
		InAbility = ""
	end

	local HAbilityData = NewAbility("Kaiser Impact", "H", -5, 15)
	local function HAbility()
		if InAbility ~= "" or TotalStop then return end
		if tick() < HAbilityData.UsedAbility then return end
		HAbilityData.Debounce = true
		HAbilityData.UsedAbility = tick() + HAbilityData.CooldownAbility
		if not hasBall() then 
			HAbilityData.UsedAbility = tick() + .5
			HAbilityData.Debounce = false
			return 
		end
		pcall(function()
			local character = player.Character or player.CharacterAdded:Wait()
			local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
			local humanoid = character:WaitForChild("Humanoid")
			InAbility = "Kaiser Impact"
			local ball = findBall()
			if ball then
				addCharacterEffect(9)
				pcall(function()
					local folder = game:GetService('ReplicatedStorage'):FindFirstChild('AurasFolder')
					local effect = game.ReplicatedStorage.AurasFolder.KaiserMoveset.Up:Clone()

					effect.CFrame = humanoidRootPart.CFrame * CFrame.new(0,2,0)
					effect.Parent = workspace
					for _,v in pairs(effect:GetDescendants()) do
						if v:IsA("ParticleEmitter") and v:GetAttribute("EmitCount") then
							v:Emit(v:GetAttribute("EmitCount"))
						end
					end
					game.Debris:AddItem(effect, 2)
				end)
				spawn(function()
					playSound(4085859074, 2.5, 0, 2.2)
					applyPosition(player, (humanoidRootPart.CFrame * CFrame.new(0, 22, -5)).Position, 6, 2000, 50)
				end)
				wait(.1)
				
				local player = game.Players.LocalPlayer
				local character = player.Character or player.CharacterAdded:Wait()
				local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

				local humanoid = character:WaitForChild("Humanoid")
				local animation2 = Instance.new("Animation")
				local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)
				animation2.AnimationId = "rbxassetid://109716854445372"
				local animationTrack2 = animator:LoadAnimation(animation2)
				animationTrack2.Priority = Enum.AnimationPriority.Action4
				local sound = Instance.new("Sound")
				sound.SoundId = "rbxassetid://9114551929"
				sound.Parent = humanoidRootPart

				animationTrack2:Play()
				animationTrack2.TimePosition = 7
				
				local phasespeed = 1.5
				animationTrack2:AdjustSpeed(5/phasespeed)
				spawn(function()
					addBallEffect(7)
					wait(.47*phasespeed)
					local args = {
						[1] = 80,
						[4] = Vector3.new(-0.9990726709365845, 0.9878, -0.015148991718888283)
					}

					game.ReplicatedStorage.Packages.Knit.Services.BallService.RE.Shoot:FireServer(unpack(args))
					wait(0.45)
					ball.Velocity = Vector3.zero
					ball.RotVelocity = Vector3.zero
					ball.AssemblyLinearVelocity = Vector3.zero
					ball.AssemblyAngularVelocity = Vector3.zero
					AncohredBall(4)
					addBallEffect(1.5, game.ReplicatedStorage.AurasFolder.KaiserMoveset.FootballSuper)
					playSound(3750994166, 2.5, 0)
					ball.Velocity = Vector3.zero
					ball.RotVelocity = Vector3.zero
					ball.AssemblyLinearVelocity = Vector3.zero
					ball.AssemblyAngularVelocity = Vector3.zero
					local speed = 300
					local direction = humanoidRootPart.CFrame.LookVector
					pcall(function()
						local effect = game.ReplicatedStorage.AurasFolder.KaiserMoveset.BallImpact:Clone()
						local spawnOffset = 0
						effect.CFrame = CFrame.new(ball.Position, ball.Position + direction) * CFrame.new(0, 0, -spawnOffset)
						effect.CFrame = effect.CFrame * CFrame.Angles(0,math.rad(180),0)
						effect.Parent = workspace

						for _,v in pairs(effect:GetDescendants()) do
							if v:IsA("ParticleEmitter") and v:GetAttribute("EmitCount") then
								v:Emit(v:GetAttribute("EmitCount"))
							end
						end
						game.Debris:AddItem(effect, 2)
					end)
					wait(0.1)
					local upForce = Vector3.new(0, 20, 0)
					ball.AssemblyLinearVelocity = (direction * speed) + upForce
					wait(1)
					animationTrack2:AdjustSpeed(5)
				end)
				wait(.65*phasespeed)
				sound:Play()
				animationTrack2:AdjustSpeed(0.1)
			end
		end)
		HAbilityData.UsedAbility = tick() + HAbilityData.CooldownAbility
		HAbilityData.Debounce = false
		InAbility = ""
	end
	
	local TAbilityData = NewAbility("Warp Step", "T", -4, 3.5)
	local function TAbility()
		if InAbility ~= "" or TotalStop then return end
		if tick() < TAbilityData.UsedAbility then return end
		TAbilityData.Debounce = true
		TAbilityData.UsedAbility = tick() + TAbilityData.CooldownAbility
		pcall(function()
			local character = player.Character or player.CharacterAdded:Wait()
			local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
			local humanoid = character:WaitForChild("Humanoid")
			InAbility = "Warp Step"
			addCharacterEffect(5)
			if hasBall() then
				addBallEffect()
			end

			playSound(7457767972, 4, .25)
			wait(0.04)
			local humanoidRootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
			local humanoid = game.Players.LocalPlayer.Character.Humanoid
			local moveDirection = humanoid.MoveDirection 
			local pos = humanoidRootPart.CFrame * CFrame.new(0,0,-21.5)
			if moveDirection.Magnitude ~= 0 then
				pos = humanoidRootPart.CFrame + moveDirection * 17
			else
				moveDirection = humanoidRootPart.CFrame.LookVector
			end
			pcall(function()
				local folder = game:GetService('ReplicatedStorage'):FindFirstChild('AurasFolder')
				local effect = game.ReplicatedStorage.AurasFolder.KaiserMoveset.WarpStep:Clone()
				effect.CFrame = CFrame.new(humanoidRootPart.Position, humanoidRootPart.Position + moveDirection) * CFrame.new(0,0,-0.5)
				effect.Parent = workspace

				for _,v in pairs(effect:GetDescendants()) do
					if v:IsA("ParticleEmitter") and v:GetAttribute("EmitCount") then
						v:Emit(v:GetAttribute("EmitCount"))
					end
				end
				game.Debris:AddItem(effect, 2)
			end)
			game:GetService("ReplicatedStorage").Packages.Knit.Services.BallService.RE.Slide:FireServer()
			applyPosition(player, pos.Position, 0.115, 7000, 400)
			wait(0.15)
		end)
		TAbilityData.UsedAbility = tick() + TAbilityData.CooldownAbility
		TAbilityData.Debounce = false
		InAbility = ""
	end
	
	local YAbilityData = NewAbility("Magnus", "Y", -3, 5)
	local function YAbility()
		if InAbility ~= "" or TotalStop then return end
		if tick() < YAbilityData.UsedAbility then return end
		YAbilityData.Debounce = true
		YAbilityData.UsedAbility = tick() + YAbilityData.CooldownAbility
		if not hasBall() then 
			YAbilityData.UsedAbility = tick() + .5
			YAbilityData.Debounce = false
			return 
		end
		pcall(function()
			local character = player.Character or player.CharacterAdded:Wait()
			local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			local TargetTeam = IsPlayerLookingAtHomeOrAway() 
			if TargetTeam == nil then
				YAbilityData.UsedAbility = tick() + .5
				YAbilityData.Debounce = false
				return 
			end
			InAbility = "Magnus"
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://83376040878208"
			local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)
			local animationTrack = animator:LoadAnimation(animation)
			animationTrack.Priority = Enum.AnimationPriority.Action4
			animationTrack:Play()
			animation:Destroy()
			addCharacterEffect(5)
			addBallEffect(1.5, game.ReplicatedStorage.AurasFolder.KaiserMoveset.FootballSuper)
			wait(0.15)
			spawn(function()
				wait(0.05)
				pcall(function()
					local folder = game:GetService('ReplicatedStorage'):FindFirstChild('AurasFolder')
					local effect = game.ReplicatedStorage.AurasFolder.KaiserMoveset.Shot:Clone()
					effect.CFrame = humanoidRootPart.CFrame * CFrame.new(0,-2,-2)
					effect.Parent = workspace
					for i,v in pairs(effect:GetDescendants()) do
						if v:IsA("ParticleEmitter") then
							if v:GetAttribute("EmitCount") then
								if v:IsA("ParticleEmitter") then
									v:Emit(v:GetAttribute("EmitCount"))
								end
							end
						end
					end
					game.Debris:AddItem(effect, 2)
				end)
			end)
			local args = {
				[1] = 110,
				[4] = Vector3.new(-0.9990726709365845, -0.5, -0.015148991718888283)
			}

			game.ReplicatedStorage.Packages.Knit.Services.BallService.RE.Shoot:FireServer(unpack(args))
			wait(0.275)
			spawn(function()
				wait(0.24)
				local ball = findBall()
				local folder = game:GetService('ReplicatedStorage'):FindFirstChild('AurasFolder')
				local effect = game.ReplicatedStorage.AurasFolder.KaiserMoveset.FootballImpact:Clone()
				effect.CFrame = ball.CFrame
				effect.Parent = workspace
				for i,v in pairs(effect:GetDescendants()) do
					if v:IsA("ParticleEmitter") then
						spawn(function()
							if v:GetAttribute("EmitCount") then
								if v:IsA("ParticleEmitter") then
									v:Emit(v:GetAttribute("EmitCount"))
								end
							end
						end)
					end
				end
				game.Debris:AddItem(effect, 2)
			end)
			playSound(7157159568, 2.5, 0)
			wait(0.29)
			local Ball = findBall()
			if Ball then
				local TargetPosition = nil
				if TargetTeam == "Home" then
					TargetPosition = CheckDistanceGKHome()
				elseif TargetTeam == "Away" then
					TargetPosition = CheckDistanceGKAway()
				end
				if TargetPosition == nil then 
					YAbilityData.UsedAbility = tick() + .5
					YAbilityData.Debounce = false
					return 
				end
				local height = Ball.CFrame.Y
				if Ball.CFrame.Y < 15 then
					height = 15
				end
				local StartHeight = height
				local CurveHeight = 50
				local BallSpeed = 500
				local Duration = 0.9
									
				local StartPosition = Ball.Position
				StartPosition = Vector3.new(StartPosition.X, StartHeight, StartPosition.Z)

				local distance = getDistance(StartPosition, TargetPosition)
				if distance < 120 then
					Duration = 0.2
					CurveHeight = 5
				elseif distance < 150 then
					CurveHeight = 15
					Duration = 0.4
				elseif distance < 180 then
					CurveHeight = 30
					Duration = 0.7
				end

				local MidPoint = (StartPosition + TargetPosition) / 2
				MidPoint = MidPoint + Vector3.new(0, CurveHeight, 0)

				local totalDistance = (TargetPosition - StartPosition).Magnitude

				local velocity = (TargetPosition - StartPosition).Unit * BallSpeed

				local function getBezierPoint(t)
					local P0 = StartPosition
					local P1 = MidPoint
					local P2 = TargetPosition
					local x = (1 - t)^2 * P0.X + 2 * (1 - t) * t * P1.X + t^2 * P2.X
					local y = (1 - t)^2 * P0.Y + 2 * (1 - t) * t * P1.Y + t^2 * P2.Y
					local z = (1 - t)^2 * P0.Z + 2 * (1 - t) * t * P1.Z + t^2 * P2.Z
					return Vector3.new(x, y, z)
				end

				local BodyVel = Instance.new("BodyVelocity")
				game.Debris:AddItem(BodyVel, 10)
				BodyVel.MaxForce = Vector3.new(4000, 4000, 4000)
				BodyVel.Velocity = velocity
				BodyVel.Parent = Ball

				local function moveBallAlongCurve()
					local startTime = tick()
					local lastPosition = Ball.Position

					while tick() - startTime < Duration do
						if Ball.Parent ~= workspace then break end
						local t = (tick() - startTime) / Duration
						local newPos = getBezierPoint(t)
						local deltaPos = newPos - Ball.Position
						local deltaTime = tick() - startTime

						local newVelocity = deltaPos / deltaTime

						BodyVel.Velocity = newVelocity

						Ball.CFrame = CFrame.new(newPos)

						wait(0.03)
					end

					Ball.Position = TargetPosition
					BodyVel:Destroy()
					spawn(function()
						if FootballVFX then
							for _, v in pairs(FootballVFX) do
								if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Beam") then
									task.spawn(function()
										v.Enabled = false
										task.wait(3)
										v:Destroy()
									end)
								end
								if v:IsA("Attachment") or v:IsA("BasePart") then
									task.spawn(function()
										for i,g in pairs(v:GetDescendants()) do
											pcall(function()
												if g:IsA("ParticleEmitter") or g:IsA("Trail") or g:IsA("Beam") then
													task.spawn(function()
														g.Enabled = false
														task.wait(3)
														g:Destroy()
													end)
												end
											end)
										end
										task.wait(3)
										v:Destroy()
									end)
								else
									v:Destroy()
								end
							end
						end
					end)
				end

				spawn(function()
					moveBallAlongCurve()
				end)
				wait(.2)
			end
		end)
		YAbilityData.UsedAbility = tick() + YAbilityData.CooldownAbility
		YAbilityData.Debounce = false
		InAbility = ""
	end
	
	local Players = game:GetService("Players")

	local function showDribbledMessage(character)
		spawn(function()
			if character and character:FindFirstChild("Head") then
				if character.Head:FindFirstChild("DribbleText") then return end
				local billboard = Instance.new("BillboardGui")
				game.Debris:AddItem(billboard,.6)
				billboard.Name = "DribbleText"
				billboard.Parent = character.Head
				billboard.Adornee = character.Head
				billboard.Size = UDim2.new(0, 200, 0, 50)
				billboard.StudsOffset = Vector3.new(0, 2, 0)

				local textLabel = Instance.new("TextLabel")
				textLabel.Parent = billboard
				textLabel.Size = UDim2.new(1, 0, 1, 0)
				textLabel.Text = "Dribbling"
				textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
				textLabel.TextStrokeTransparency = 0.8
				textLabel.BackgroundTransparency = 1
				textLabel.TextSize = 20
			end
		end)
	end

	local function showTackleMessage(character)
		spawn(function()
			if character and character:FindFirstChild("Head") then
				if character.Head:FindFirstChild("TackleText") then return end
				local billboard = Instance.new("BillboardGui")
				game.Debris:AddItem(billboard,.6)
				billboard.Name = "TackleText"
				billboard.Parent = character.Head
				billboard.Adornee = character.Head
				billboard.Size = UDim2.new(0, 200, 0, 50)
				billboard.StudsOffset = Vector3.new(0, 2, 0)

				local textLabel = Instance.new("TextLabel")
				textLabel.Parent = billboard
				textLabel.Size = UDim2.new(1, 0, 1, 0)
				textLabel.Text = "Tackling"
				textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
				textLabel.TextStrokeTransparency = 0.8
				textLabel.BackgroundTransparency = 1
				textLabel.TextSize = 20
			end
		end)
	end
	
	local MetaVision = false
	local Players = game:GetService("Players")

	local function retryCharacter(player)
		while not player.Character do
			wait()
			player.CharacterAdded:Wait()
		end
		return player.Character
	end

	local function onCharacterAdded(character)
		local valuesFolder = character:FindFirstChild("Values")
		if valuesFolder then
			local SlidingValue = valuesFolder:FindFirstChild("Sliding")
			local DribblingValue = valuesFolder:FindFirstChild("Dribbling")
			if SlidingValue then
				SlidingValue:GetPropertyChangedSignal("Value"):Connect(function()
					if SlidingValue.Value == true and MetaVision then
						BallDribble:FireServer()
						if character then
							showTackleMessage(character)
						end
					end
				end)
			end
			if DribblingValue then
				DribblingValue:GetPropertyChangedSignal("Value"):Connect(function()
					if DribblingValue.Value == true and MetaVision then
						if character then
							showDribbledMessage(character)
						end
					end
				end)
			end
		end
	end

	local function onPlayerAdded(player)
		local character = retryCharacter(player)
		onCharacterAdded(character)
		player.CharacterAdded:Connect(onCharacterAdded)
	end
	Players.PlayerAdded:Connect(onPlayerAdded)
	for _, player in pairs(Players:GetPlayers()) do
		local character = player.Character or retryCharacter(player)
		onCharacterAdded(character)
		player.CharacterAdded:Connect(onCharacterAdded)
	end
	
	local NAbilityData = NewAbility("Kaiser Pass", "N", -2, 10)
	local function NAbility()
		if InAbility ~= "" or TotalStop then return end
		if tick() < NAbilityData.UsedAbility then return end
		NAbilityData.Debounce = true
		NAbilityData.UsedAbility = tick() + NAbilityData.CooldownAbility
		if not hasBall() then 
			NAbilityData.UsedAbility = tick() + .5
			NAbilityData.Debounce = false
			return 
		end
		pcall(function()
			local character = player.Character or player.CharacterAdded:Wait()
			local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
			local humanoid = character:FindFirstChildOfClass("Humanoid")
			if LookingAtTargetHRP == nil then
				NAbilityData.UsedAbility = tick() + .5
				NAbilityData.Debounce = false
				return 
			end
			local target = LookingAtTargetHRP
			InAbility = "Kaiser Pass"
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://83376040878208"
			local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)
			local animationTrack = animator:LoadAnimation(animation)
			animationTrack.Priority = Enum.AnimationPriority.Action4
			animationTrack:Play()
			animation:Destroy()
			addCharacterEffect(5)
			wait(0.15)
			addBallEffect(1.5, game.ReplicatedStorage.AurasFolder.KaiserMoveset.FootballSuper)
			spawn(function()
				wait(0.05)
				pcall(function()
					local folder = game:GetService('ReplicatedStorage'):FindFirstChild('AurasFolder')
					local effect = game.ReplicatedStorage.AurasFolder.KaiserMoveset.Shot:Clone()
					effect.CFrame = humanoidRootPart.CFrame * CFrame.new(0,-2,-2)
					effect.Parent = workspace
					for i,v in pairs(effect:GetDescendants()) do
						if v:IsA("ParticleEmitter") then
							if v:GetAttribute("EmitCount") then
								if v:IsA("ParticleEmitter") then
									v:Emit(v:GetAttribute("EmitCount"))
								end
							end
						end
					end
					game.Debris:AddItem(effect, 2)
				end)
			end)
			local args = {
				[1] = 110,
				[4] = Vector3.new(-0.9990726709365845, -0.5, -0.015148991718888283)
			}

			game.ReplicatedStorage.Packages.Knit.Services.BallService.RE.Shoot:FireServer(unpack(args))
			wait(0.275)
			spawn(function()
				wait(0.24)
				local ball = findBall()
				local folder = game:GetService('ReplicatedStorage'):FindFirstChild('AurasFolder')
				local effect = game.ReplicatedStorage.AurasFolder.KaiserMoveset.FootballImpact:Clone()
				effect.CFrame = ball.CFrame
				effect.Parent = workspace
				for i,v in pairs(effect:GetDescendants()) do
					if v:IsA("ParticleEmitter") then
						spawn(function()
							if v:GetAttribute("EmitCount") then
								if v:IsA("ParticleEmitter") then
									v:Emit(v:GetAttribute("EmitCount"))
								end
							end
						end)
					end
				end
				game.Debris:AddItem(effect, 2)
			end)
			playSound(7157159568, 2.5, 0)
			wait(0.29)
			spawn(function()
				local Ball = findBall()
				if Ball then
					local player = game.Players.LocalPlayer
					local character = player.Character
					local humanoid = character and character:FindFirstChild("Humanoid")
					local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")

					if not humanoidRootPart or not camera then return end
					local BallSpeed = 500
					local CurveHeight = 50
					local MaxChaseTime = 0.7
					local StartPosition = Ball.Position

					local targetWalkSpeed = target.Parent:FindFirstChild("Humanoid") and target.Parent.Humanoid.WalkSpeed or 16
					local targetVelocity = target.AssemblyLinearVelocity
					local targetMovementDirection = target.CFrame.LookVector

					local BodyVelocity = Instance.new("BodyVelocity")
					BodyVelocity.MaxForce = Vector3.new(1e6, 1e6, 1e6)
					BodyVelocity.Velocity = Vector3.zero  
					BodyVelocity.Parent = Ball

					local startTime = tick()
					local reachedTarget = false
					
					local distance = getDistance(StartPosition, target.Position)
					if distance < 80 then
						CurveHeight = 10
						MaxChaseTime = 0.3
					elseif distance < 150 then
						CurveHeight = 20
						MaxChaseTime = 0.5
					elseif distance > 250 then
						CurveHeight = 70
						MaxChaseTime = 0.5
					elseif distance > 300 then
						CurveHeight = 80
						MaxChaseTime = 0.5
					end
					
					while Ball.Parent == workspace do  
						local targetPosition = target.Position
						local MidPoint = (StartPosition + targetPosition) / 2 + Vector3.new(0, CurveHeight, 0)
						local elapsedTime = tick() - startTime
						local t = math.min(elapsedTime / MaxChaseTime, 1)
						local BezierPos = (1 - t)^2 * StartPosition + 2 * (1 - t) * t * MidPoint + t^2 * targetPosition

						local direction = (BezierPos - Ball.Position).Unit
						local distance = (BezierPos - Ball.Position).Magnitude
						local adjustedSpeed = math.clamp(distance * 3, 200, BallSpeed)

						BodyVelocity.Velocity = direction * adjustedSpeed

						if distance < 1.4 then  
							reachedTarget = true
						end
						wait(0.02)
					end

					if reachedTarget then
						BodyVelocity.Velocity = (target.Position - Ball.Position).Unit * BallSpeed
						wait(0.3)
					else
						BodyVelocity.Velocity = (target.Position - Ball.Position).Unit * BallSpeed
						wait(0.5)
					end

					BodyVelocity:Destroy()
					spawn(function()
						if FootballVFX then
							for _, v in pairs(FootballVFX) do
								if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Beam") then
									task.spawn(function()
										v.Enabled = false
										task.wait(3)
										v:Destroy()
									end)
								end
								if v:IsA("Attachment") or v:IsA("BasePart") then
									task.spawn(function()
										for i,g in pairs(v:GetDescendants()) do
											pcall(function()
												if g:IsA("ParticleEmitter") or g:IsA("Trail") or g:IsA("Beam") then
													task.spawn(function()
														g.Enabled = false
														task.wait(3)
														g:Destroy()
													end)
												end
											end)
										end
										task.wait(3)
										v:Destroy()
									end)
								else
									v:Destroy()
								end
							end
						end
					end)
				end
			end)
			wait(0.2)
		end)
		NAbilityData.UsedAbility = tick() + NAbilityData.CooldownAbility
		NAbilityData.Debounce = false
		InAbility = ""
	end
	
	local MAbilityData = NewAbility("Metavision", "M", -1, 10)
	local function MAbility()
		if InAbility ~= "" or TotalStop then return end
		if tick() < MAbilityData.UsedAbility then return end
		MAbilityData.Debounce = true
		MAbilityData.UsedAbility = tick() + MAbilityData.CooldownAbility
		pcall(function()
			local character = player.Character or player.CharacterAdded:Wait()
			local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
			MetaVision = true
			if NoCD then
				MAbilityData.UsedAbility = tick() + 60
				wait(60)
			end
			wait(30)
			MetaVision = false
			wait(0.15)
		end)
		MAbilityData.UsedAbility = tick() + MAbilityData.CooldownAbility
		MAbilityData.Debounce = false
	end

	local function DestroyScript()
		print("Destroying...")
		local c1 = tick() + 50
		TotalStop = true
		MetaVision = false
		PAbilityClone:Destroy()
		for i,v in pairs(Abilities) do
			v:Destroy()
		end
	end

	UIS.InputBegan:Connect(function(input, gameProcessedEvent)
		if gameProcessedEvent then return end

		if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.Z and ZAbilityData.Button and ZAbilityData.Button.Parent then
			ZAbility()
		end
		if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.H and HAbilityData.Button and HAbilityData.Button.Parent then
			HAbility()
		end
		if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.T and TAbilityData.Button and TAbilityData.Button.Parent then
			TAbility()
		end
		if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.Y and YAbilityData.Button and YAbilityData.Button.Parent then
			YAbility()
		end
		if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.N and NAbilityData.Button and NAbilityData.Button.Parent then
			NAbility()
		end
		if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.M and MAbilityData.Button and MAbilityData.Button.Parent then
			MAbility()
		end
		if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.P and PAbilityClone and PAbilityClone.Parent then
			DestroyScript()
		end
	end)

	ZAbilityData.Button.MouseButton1Click:Connect(function()
		ZAbility()
	end)
	HAbilityData.Button.MouseButton1Click:Connect(function()
		HAbility()
	end)
	TAbilityData.Button.MouseButton1Click:Connect(function()
		TAbility()
	end)
	YAbilityData.Button.MouseButton1Click:Connect(function()
		YAbility()
	end)
	NAbilityData.Button.MouseButton1Click:Connect(function()
		NAbility()
	end)
	MAbilityData.Button.MouseButton1Click:Connect(function()
		MAbility()
	end)
	PAbilityClone.MouseButton1Click:Connect(function()
		DestroyScript()
	end)

	spawn(function()
		repeat 
			wait()
		until current ~= LoadedVersion
		print("Version Incorrect")
		DestroyScript()
	end)
else
	print("Wrong Version")
end
